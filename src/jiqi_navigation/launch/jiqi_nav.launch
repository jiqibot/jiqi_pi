<launch>

    <!-- ARGUMENTS -->
    <!-- Map Server -->
    <arg name="map_file" default="$(find jiqi_navigation)/maps/???.yaml"/> <!-- ADD MAPNAME / SOME KIND OF SELECTION METHOD HERE -->
    
    
    <!-- TRANSFORMS -->
    <!-- UNSURE IF THIS SHOULD BE HERE OR IN jiqi_bringup.launch WITH ROBOT STATE PUBLISHER E.G. ??? -->
    <!-- Footprint -->
    <!-- <node pkg="tf2_ros" type="static_transform_publisher" name="base_footprint_to_base_link" args="0 0 0.09 0 0 0 base_footprint base_link 30" /> -->
    <!-- Sensor Links -->
    <!-- <node pkg="tf2_ros" type="static_transform_publisher" name="base_link_to_laser" args="0.06 0 0.08 0 0 0 base_link laser 30" />
    <node pkg="tf2_ros" type="static_transform_publisher" name="base_link_to_imu"   args="0 0.06 0.02 0 0 0 base_link imu 30"   /> -->


    <!-- Base Controller -->
    <!-- Subscriptions: /cmd_vel, /front_object_close_slow, front_object_close_stop -->
    <!-- Publications:  /motor_pps_data -->
    <node pkg="jiqi_mdc" type="mecanum_drive_controller" name="mecanum_drive_controller" output="screen" >
        <rosparam command="load" file="$(find jiqi_navigation)/config/jiqi_mdc/mecanum_drive_controller.yaml" />
    </node>

    <!-- Map Server -->
    <!-- Publications: /map, /map_metadata -->
    <node pkg="map_server" name="map_server" type="map_server" args="$(arg map_file)" />

    <!-- LiDAR SLAM -->
    <!-- Subscriptions:   /scan, /syscommand (used for map/pose reset purposes) -->
    <!-- Publications:    /map, /map_metadata, /slam_cloud, /scanmatch_odom (odometry as a nav_msgs/Odometry message) -->
    <!--                  /slam_out_pose (estimated pose), /poseupdate (estimated pose with gaussian covariance estimate) -->
    <!-- Transforms: scanmatcher → map -->
    <node pkg="hector_mapping" type="hector_mapping" name="hector_mapping" output="screen" >
        <rosparam command="load" file="$(find jiqi_navigation)/config/hector_mapping/hector_mapping.yaml" />
    </node>

    <!-- AMCL (IS THIS NEEDED AS WELL AS HECTOR MAPPING?)-->
    <!-- Subscriptions: -->
    <!-- Publications: -->
    <!-- <node name="amcl" pkg="amcl" type="amcl" clear_params="true" >
        <rosparam command="load" file="$(find jiqi_navigation)/config/amcl/amcl.yaml" />
    </node> -->

    <!-- Extended Kalman Filter for Global Frame (map → odom) -->
    <!-- Subscriptions: -->
    <!-- Publications: -->
    <node pkg="robot_localization" type="ekf_localization_node" name="ekf_global" clear_params="true" >
        <rosparam command="load" file="$(find jiqi_navigation)/config/robot_localization/ekf_global.yaml" />
        <!-- Remap publications -->
        <remap from="odometry/filtered" to="odometry/global" />
    </node>

    <!-- GPS Data Preparation for Global Localisation -->
    <!-- Subscriptions: -->
    <!-- Publications: odometry/gps, gps/filtered -->
    <!-- <node pkg="robot_localization" type="navsat_transform_node" name="navsat" output="screen" >
        <rosparam command="load" file="$(find jiqi_navigation)/config/robot_localization/navsat.yaml" /> -->
        <!-- Remap subscriptions -->
        <!-- <remap from="imu/data" to="imu/data" />    
        <remap from="gps/fix" to="gps/fix" />
        <remap from="odometry/filtered" to="odometry/global" /> -->
        <!-- Remap publications -->
        <!-- <remap from="gps/filtered" to="gps/filtered" />
        <remap from="odometry/gps" to="odometry/gps" />
    </node> -->

    <!-- Extended Kalman Filter for Local Frame (odom → base_link) -->
    <!-- Subscriptions: -->
    <!-- Publications: /odometry/local -->
    <node pkg="robot_localization" type="ekf_localization_node" name="ekf_local" clear_params="true" >
        <rosparam command="load" file="$(find jiqi_navigation)/config/robot_localization/ekf_local.yaml" />
        <!-- Remap publications -->
        <remap from="odometry/filtered" to="odometry/local" />
    </node>

    <!-- RViz -->
    <!-- Subscriptions: -->
    <!-- Publications: -->
    <!-- NEED TO RUN DEFAULT RVIZ AND CONFIGURE VIEW BEFORE SAVING CONFIG TO config.rviz, THEN SWITCH TO COMMENTED VERSION -->
    <!-- <node pkg="rviz" type="rviz" name="rviz" /> -->
    <node pkg="rviz" type="rviz" name="rviz" args="-d $(find articubot)/rviz/teb_config.rviz"/>
    <!-- <node pkg="rviz" type="rviz" name="rviz" args="-d $(find jiqi_navigation)/config/rviz/config.rviz" /> -->
    
    <!-- Move Base -->
    <!-- Subscriptions: /move_base_simple/goal -->
    <!-- Publications:  /cmd_vel -->
    <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
        <rosparam file="$(find jiqi_navigation)/config/move_base/costmap_common_params.yaml"    command="load" ns="global_costmap" />
        <rosparam file="$(find jiqi_navigation)/config/move_base/costmap_common_params.yaml"    command="load" ns="local_costmap"  />
        <rosparam file="$(find jiqi_navigation)/config/move_base/local_costmap_params.yaml"     command="load" />
        <rosparam file="$(find jiqi_navigation)/config/move_base/global_costmap_params.yaml"    command="load" />
        <rosparam file="$(find jiqi_navigation)/config/move_base/teb_local_planner_params.yaml" command="load" />
        <!-- <rosparam file="$(find jiqi_navigation)/config/move_base/costmap_converter_params.yaml" command="load" /> -->
        <rosparam file="$(find jiqi_navigation)/config/move_base/move_base_params.yaml"         command="load" />
        <!-- Remap subscriptions -->
        <remap from="odom" to="odometry/local" />
        <!-- Remap publications -->
        <remap from="cmd_vel" to="cmd_vel" />
    </node>

</launch>